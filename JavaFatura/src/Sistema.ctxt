#BlueJ class context
comment0.target=Sistema
comment0.text=\r\n\ Classe\ em\ que\ sao\ guardados\ os\ agentes\ do\ Sistema,\ os\ Contribuintes\ individuais\ e\ Empresariais,\ e\ \r\n\ em\ que\ vao\ sendo\ guardadas\ as\ Faturas\ emitidas\ pelos\ contribuintes\ empresariais.\ \r\n\ Implementa\ metodos\ para\ suportar\ todas\ as\ funcionalidades\ do\ sistema.\ \r\n\ @author\ Nuno\ Rei,\ Joao\ Marques,\ Luis\ Abreu\ \r\n\ @version\ Maio\ 2018\r\n
comment1.params=
comment1.target=Sistema()
comment1.text=\ Construtor\ Vazio\r\n\ \r\n
comment10.params=
comment10.target=java.util.List\ getFaturasEmitidasList()
comment10.text=\r\n\ @return\ Lista\ das\ Faturas\ que\ foram\ emitidas\ para\ o\ Sistema\r\n
comment11.params=FaturasEmitidas
comment11.target=void\ setFaturasEmitidas(java.util.HashMap)
comment11.text=\r\n\ @param\ Map\ de\ Faturas\ para\ colocar\r\n
comment12.params=NIF
comment12.target=boolean\ procuraUser(java.lang.String)
comment12.text=\r\n\ @param\ NIF\ em\ formato\ String\r\n\ @return\ True\ caso\ o\ Contribuinte\ esta\ registado\ no\ Sistema,\ contido\ no\ HashMap\ de\ Contribuintes,false\ caso\ contrario\r\n
comment13.params=NIF
comment13.target=Contribuinte\ retornaUser(java.lang.String)
comment13.text=\r\n\ @param\ NIF\ em\ formato\ String\r\n\ @return\ O\ contribuinte\ que\ corresponde\ ao\ NIF\ passado\ como\ parametro\r\n
comment14.params=c
comment14.target=void\ adicionaUser(Contribuinte)
comment14.text=\r\n\ Adiciona\ o\ Contribuinte\ a\ HashMap\ de\ Contribuintes\ \ \r\n\ @param\ Um\ Contribuinte\r\n
comment15.params=
comment15.target=int\ quantosUsers()
comment15.text=\r\n\ Numero\ de\ utilizadores\ registados\ no\ sistema\ \r\n
comment16.params=
comment16.target=int\ quantasFaturas()
comment16.text=\r\n\ Numero\ de\ Faturas\ emitidas\ para\ o\ sistema\ \r\n
comment17.params=f
comment17.target=void\ adicionaFaturaPendente(FaturaPendente)
comment17.text=\r\n\ Adiciona\ a\ fatura\ ao\ HashMap\ de\ FaturasEmitidas,\ e\ adiciona\ tambem\ ao\ HashMap\ de\ FaturasPendentes\ do\ Cliente\ Individual\r\n\ @param\ FaturaPendete\ subclasse\ de\ Fatura\ \r\n
comment18.params=f
comment18.target=void\ adicionaFatura(Fatura)
comment18.text=\r\n\ Adiciona\ a\ fatura\ ao\ HashMap\ de\ FaturasEmitidas,\ e\ adiciona\ tambem\ a\ lista\ de\ FaturasValidadas\ do\ Cliente\ Individual\r\n\ @param\ Fatura\r\n
comment19.params=id\ ae
comment19.target=void\ validaFatura(java.lang.String,\ java.lang.String)
comment19.text=\r\n\ Coloca\ a\ Natureza\ da\ Despesa\ correta\ numa\ fatura\ que\ estava\ por\ validar,\ e\ valida\ a\ mesma\ removendo-a\ das\ Faturas\r\n\ Pendentes\ do\ Contribuinte\ Individual,\ e\ colocando-a\ nas\ Faturas\ Validadas.\ Calculando\ tambem\ a\ Deducao\ associada\ a\ \r\n\ fatura.\r\n\ @param\ String\ Identificador\ de\ Fatura\ \r\n\ @param\ String\ Atividade\ Economica\ para\ colocar\ \r\n
comment2.params=faturas\ users
comment2.target=Sistema(java.util.HashMap,\ java.util.HashMap)
comment2.text=\ Construtor\ por\ parametros\r\n@param\ Map\ de\ Faturas\r\n@param\ Map\ de\ Contribuintes\r\n
comment20.params=f
comment20.target=double\ calculaDeducao(Fatura)
comment20.text=\r\n\ Calcula\ a\ deducao\ associada\ a\ uma\ Fatura,\ caso\ tenha\ deducao\r\n\ @param\ Fatura\r\n\ @return\ deducao\ da\ Fatura\r\n
comment21.params=f
comment21.target=void\ aumentaDeducao(Fatura)
comment21.text=\r\n\ Aumenta\ a\ deducao\ acumulada\ do\ contribuinte,\ cliente\ da\ fatura\r\n\ @param\ Fatura\r\n
comment22.params=nif
comment22.target=java.lang.String\ acumuladoDetalhado(java.lang.String)
comment22.text=\r\n\ Forma\ uma\ String\ com\ informacao\ Detalhada\ sobre\ a\ deducao\ fiscal\ acumulada,\ \r\n\ percorre\ todas\ as\ faturas\ ja\ validadas,\ e\ mostra\ o\ valor\ da\ fatura,\ o\ identificador,\ e\ quanto\ e\ que\ contribui\ para\ o\ acumulado.\r\n\ @param\ NIF\ do\ Contribuinte\ Individual\ \r\n\ @return\ String\ com\ toda\ a\ informacao\ detalhada\ sobre\ a\ contribuicao\ de\ cada\ fatura\ para\ o\ acumulado\ de\ deducao\ fiscal\ \r\n
comment23.params=s
comment23.target=double\ converte(java.lang.String)
comment24.params=nif
comment24.target=double\ acumuladoAgregadoFamiliar(java.lang.String)
comment24.text=\r\n\ Forma\ uma\ String\ com\ informacao\ Detalhada\ sobre\ a\ deducao\ fiscal\ acumulada,\ \r\n\ percorre\ todas\ as\ faturas\ ja\ validadas,\ e\ mostra\ o\ valor\ da\ fatura,\ o\ identificador,\ e\ quanto\ e\ que\ contribui\ para\ o\ acumulado.\r\n\ @param\ NIF\ do\ Contribuinte\ Individual\ \r\n\ @return\ String\ com\ toda\ a\ informacao\ detalhada\ sobre\ a\ contribuicao\ de\ cada\ fatura\ para\ o\ acumulado\ de\ deducao\ fiscal\ \r\n
comment25.params=nif\ c
comment25.target=java.util.List\ ordenaFaturasEmpresa(java.lang.String,\ java.util.Comparator)
comment25.text=\r\n\ Ordena\ as\ Faturas\ Emitidas\ por\ uma\ empresa,\ atraves\ do\ comparator,\ e\ coloca\ as\ Faturas\ numa\ lista\r\n\ @param\ NIF\ da\ Empresa\ \r\n\ @param\ Comparator\ de\ Faturas\r\n\ @return\ lista\ de\ Faturas\ ordenadas\ por\ valor,\ ordem\ crescente\ do\ valor\r\n
comment26.params=nif\ c\ begin\ end
comment26.target=java.util.List\ faturasIndividuaisIntervalo(java.lang.String,\ java.lang.String,\ java.time.LocalDate,\ java.time.LocalDate)
comment26.text=\r\n\ Lista\ as\ faturas\ de\ um\ cliente\ num\ intervalo\ de\ tempo\ dado\r\n\ @param\ NIF\ da\ Empresa\ (Classe\ Empresariais,\ subclasse\ de\ Contribuinte)\r\n\ @param\ NIF\ do\ Cliente\ (Contribuinte\ Individual\ subclasse\ de\ Contribuinte)\r\n\ @param\ Data\ inicio\ do\ intervalo\r\n\ @param\ Data\ fim\ do\ intervalo\r\n\ @return\ lista\ de\ Faturas\ do\ Contribuinte\ Individual\ no\ intervalo\ de\ tempo\ dado\r\n
comment27.params=nif\ c
comment27.target=java.util.List\ faturasIndividuaisValorDecrescente(java.lang.String,\ java.lang.String)
comment27.text=\r\n\ Lista\ as\ faturas\ de\ um\ cliente\ por\ ordem\ decrescente\ de\ valor\r\n\ @param\ NIF\ da\ Empresa\ (Classe\ Empresariais,\ subclasse\ de\ Contribuinte)\r\n\ @param\ NIF\ do\ Cliente\ (Contribuinte\ Individual\ subclasse\ de\ Contribuinte)\r\n\ @return\ lista\ de\ Faturas\ do\ Contribuinte\ Individual\ ordem\ decrescente\ do\ valor\r\n
comment28.params=nif\ begin\ end
comment28.target=double\ faturadoEmpresaIntervalo(java.lang.String,\ java.time.LocalDate,\ java.time.LocalDate)
comment28.text=\r\n\ Calcula\ o\ montante\ faturado\ por\ uma\ empresa\ num\ intervalo\ de\ tempo\ dado\r\n\ @param\ NIF\ da\ Empresa\ (Classe\ Empresariais,\ subclasse\ de\ Contribuinte)\r\n\ @param\ Data\ inicio\ do\ intervalo\r\n\ @param\ Data\ fim\ do\ intervalo\r\n\ @return\ Retorna\ o\ montante\ faturado\ por\ uma\ empresa\ num\ intervalo\ de\ tempo\ dado\r\n
comment29.params=
comment29.target=java.util.Collection\ maisDispendiosos()
comment29.text=\r\n\ Cria\ uma\ collection\ de\ contribuintes\ individuais\ ordenados\ por\ ordem\ decrescente\ do\ total\ gasto.\r\n\ @return\ Collection\ de\ Contribuintes\ Individuais\r\n
comment3.params=s
comment3.target=Sistema(Sistema)
comment3.text=\ Construtor\ copia\r\n@param\ Sistema\r\n
comment30.params=n
comment30.target=java.util.Collection\ maisFaturam(int)
comment30.text=\r\n\ Cria\ uma\ collection\ de\ contribuintes\ empresariais\ ordenados\ por\ ordem\ decrescente\ do\ total\ faturado.\r\n\ @param\ N\ numero\ de\ empresas\ que\ pretende\ obter\r\n\ @return\ Collection\ de\ Contribuintes\ Individuais\r\n
comment31.params=nif
comment31.target=java.lang.String\ sobre(java.lang.String)
comment31.text=\r\n\ Busca\ a\ informacao\ sobre\ um\ Contribuinte\r\n\ @param\ NIF\ do\ Contribuinte\r\n\ @return\ String\ com\ toda\ a\ sua\ informacao\r\n
comment32.params=
comment32.target=void\ guardaEstado()
comment32.text=\r\n\ Guarda\ o\ Estado\ da\ Aplicacao\ em\ ficheiro\r\n
comment33.params=
comment33.target=Sistema\ leEstado()
comment33.text=\r\n\ Le\ o\ Estado\ da\ Aplicacao\ do\ ficheiro\r\n
comment4.params=
comment4.target=int\ getIdcounter()
comment4.text=\r\n\ @return\ Numero\ em\ que\ se\ encontra\ o\ contador\ de\ faturas\ que\ serve\ como\ identificador\ unico\ para\ as\ faturas\r\n
comment5.params=
comment5.target=java.util.Map\ getUsers()
comment5.text=\r\n\ @return\ Map\ dos\ Contribuintes\r\n
comment6.params=
comment6.target=java.util.List\ getUsersList()
comment6.text=\r\n\ @return\ Lista\ dos\ Contribuintes\ registados\ no\ Sistema\r\n
comment7.params=counter
comment7.target=void\ setIdcounter(int)
comment7.text=\r\n\ @param\ Numero\ de\ faturas\ ja\ emitidas\ para\ atualizar\ no\ contador\ de\ unique\ ids\ das\ faturas\ \r\n
comment8.params=users
comment8.target=void\ setUsers(java.util.HashMap)
comment8.text=\r\n\ @param\ HashMap\ de\ Contribuintes\ para\ colocar\ \r\n
comment9.params=
comment9.target=java.util.Map\ getFaturasEmitidas()
comment9.text=\r\n\ @return\ Map\ das\ Faturas\ que\ foram\ emitidas\ para\ o\ Sistema\r\n
numComments=34
